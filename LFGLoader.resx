<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAB8M97/ezPd/3wz3v+AM9//gzTf/4M13/+FNt//hzjg/4g54P+RPdj/oTu+/7I9uP+9Rbj/v0+h/71L
        ov+3Q6v/sUCt/7I/sf+1QLb/tEK4/5NKq/9yUp7/dFeJ/2tViv9dUZr/WU+i/1hPof9bUqX/lmKZ/9R0
        lv/XbpP/zWOR/4NB3/+FQ9//hkjf/4xM4P+RUeD/klPg/5NV4P+UV+D/lVTf/5VJyv+WQ6X/o0ij/6dM
        o/+ZR5D/gj6H/245gP9jNXv/YTR6/2Y4gf90P5H/d02p/29etv9vYKH/aVmS/3Bos/9kZcP/Y2XE/2Bj
        wv9oZrv/mm+p/8p2oP/WdZz/hkLf/4VD3/+HR+D/jkvg/5RQ4P+XUeD/mVLg/51T1v+FVLX/VUuL/0RD
        dP9FRHb/QUh7/zJHev8mRHT/Hz9u/xs8a/8dOmj/ITlm/yc2ZP80N2n/SUd9/2Bchf9bUY//fHK7/29t
        0/9qa9r/Z2jX/2Bj1P9gYM//eGPE/6hutv+JOeD/ijzg/4xB4P+TR+H/m0rh/6ZM4P+lTt7/j1K+/0dj
        n/8taZ3/MWig/zdoo/86ZaP/Pmml/z1spP82aJ7/LGCT/yVYi/8eTH3/GUJx/xg8a/85SXH/Xlt6/zs0
        aP9eVZP/dGnH/3Ft3P9ub9z/aGvY/2Nl0/9hYdL/Z2HO/5RC4P+YR+L/nVDg/6Jb4P+tY+D/xm3d/7xu
        0v9abbD/MnOq/zxZnf9NUJn/ZV+g/3FqoP9+d6b/gHum/3uCq/9mdqf/W3aq/0hxp/82Zpv/L1eG/0td
        gP9dZIT/KDpo/zY2aP9fWJX/dXTO/3R84f9xfuH/bnje/2xy3P9obdj/s1DO/7JSzv+yVNT/rF7f/7Bo
        4P/Det//knrB/zVwp/80VZn/YlqX/5SHrf+nn7T/s623/7Ottf+yq7X/t6+4/66mtf+knbL/hYCl/2lt
        ov9SYp3/SmeW/0liiP8hRXH/Hjhq/zIyYP9cU4//c3PT/3R+4f91geH/c37g/2523P/BZb3/yGm+/81v
        wf+/adH/uG7d/6V92f9JdLD/Mmme/250n/+ro7T/u7a7/7y3vP+9uLz/u7a8/7q0uv+7trz/vLe7/7q1
        uf+uqLL/lIun/3Ronf9aWpn/Q1+Z/ypajv8bRXX/ITxs/zo3Zf9pY6r/hIvh/42c6P+Qn+n/ipjn/857
        zf/PgtT/1ojR/9R+zv/Lf9X/eHm//y1tpP9Udp//tbK6/724vv+vqLf/t7K8/7Wwu/+qo7P/pp6z/6af
        t/+wqrn/vLa8/7extv+rpK7/q6Oy/4Bznf9TSo7/O1WY/yhZj/8cSXr/JDxr/0tFd/+Egs7/najr/6Ow
        7f+jsOz/2ozQ/92a2f/doNz/3pna/7qPzP9Ic6r/LGmi/1Rinv+xrLz/k4yr/z0ugf9VSIz/hn6n/4mB
        qv+Ee6r/dWul/39zqv+akbP/r6i3/7KstP+zrrX/qKKv/46CpP9PR4z/NV2d/yNWiv8eSnz/Mj1q/3Zw
        rf+iqer/rrru/7C87v/Zg9f/3pje/+Sx5//gt+X/f4y8/zpypv8uYZ//Li2O/0c6lf81JoT/FAJy/xoI
        b/9ZTpL/Z16b/19RmP9RRJD/UkWR/3Rqpf+Nhqz/sau5/7Svtf+3sbj/qaOu/351mP9BW5T/KGCW/x5Q
        gf8sRW3/b2ub/6Ol4f+6xPD/vcfw/9eP4v/fpub/6L7v/8W54f9cga3/N3On/y9anP8rKIz/GgmD/xUC
        df8WBHD/FgZo/zQmd/9HOoX/RDeE/z4ygf9CNYP/VUeQ/2VYmf9+daD/dmuX/5OKp/+uqLH/q6Sv/2Z8
        n/8pYpj/I1KD/0JSc/9SUnX/lZLE/73C8P++x/D/2pHg/+Km5P/oxe//mKjM/1J+pv8wcqb/L1KX/ycf
        iv8aCIL/FgRz/xYEbv8UBWT/Gg1j/ywhbv8vI2//Kh5t/y8kcP9AM37/SDqG/0k8hP8yJHT/NCdw/6GZ
        r/+uqbT/Vned/yRdk/8pVIT/R1h5/zZHa/+Ggaf/ur3p/7/J8f/enuT/47Do/9zE6v97lbv/RHim/y1u
        o/8tQ5L/IRSJ/xcEff8VA3H/FgRu/xUFZv8UBV//Fglc/xsPWv8dEln/HxVb/ykfZ/8zJ3D/MSVv/yAT
        Yf8VCFn/YVWO/4mPr/82Zpf/JF6V/zJZhv85VHz/KERu/4F+oP/Gyuz/0dj0/96r5f/lw+z/z8Ln/2uM
        tP85d6r/LWqh/zE9i/9KQI3/PC6D/yARcf8YCGr/FARk/xQFX/8SA1j/DwNO/xAFS/8RBUz/FwxQ/xsR
        WP8aDlr/EwVW/xIDWf8aC2b/M02S/ydglf8nX5T/QmCH/y9Rfv8jQm7/c3CT/8PB6P/Sz/T/tYzV/8Kj
        3v+uqtX/X4iy/zR3rP8qYZr/Wl6U/5aPn/+Vjp3/gXmV/15VhP8qHWn/FQdf/xIDXP8PAlL/DAFJ/w0B
        SP8NAkj/DgNK/xEEUf8TBFn/EwRe/x0dcf8pWpb/JWCW/y5hk/9Xa4r/KVKC/x5Ccf9nZIn/vrLj/82/
        8f+1mdv/uqHg/52j0P9Vh7T/M3mu/ypalv9ta5f/qqOt/6Sepv+hm6L/nJWe/4F5jv9XTX3/Mydq/yUY
        Yf8WC1L/EgZM/xAES/8NAUv/EAJU/xMEXP8VCGL/J0WJ/ydhlv8mYJb/P2iT/19yj/8iUYP/IER1/2di
        jv+2pNz/xa3p/97A7v/exPH/qK/X/0iCsf8zfLD/LF2Y/1FMi/97b5f/nJOo/6qjrf+ooan/opuj/5OM
        lv+Ripr/hH2R/3dviv9pYID/Y1l9/zowaf8sIGn/IBJj/x0fb/8pXJX/Jl+U/ydglf9Sb5H/U26P/x5O
        g/8hRXX/aGWS/6ea2v+vmeL/4KXm/+Kr5/+qotH/P36t/zR8sP8vbaP/NkyO/0U9hf9YR4f/f3Cc/5eM
        pf+rorD/pZ2o/62mrv+qo6v/pJ2l/5yTnP+YkJn/ioOQ/4B5jP9eWYD/NE+K/ydhl/8nYpf/KWGW/2R4
        lP9FZ47/HU2C/yRIdv96gaT/sr7r/6687v/Uf93/247c/7OWzv8+fK7/NHuw/zV9sf8zeK3/OGik/zxO
        lP85PYT/RTx//2FUif9rX4r/i4Ge/5KJov+clKj/nZSl/5mQn/+XkJn/jYaR/2Fngv8uXZD/J2GX/ylm
        nP8xZ5j/cICa/zVhj/8cTYL/Mk58/5ScwP+2zPL/ssrx/9eC5P/dieX/wJjY/0J9sf80e7D/NoC1/zaB
        tf82gbX/M3Ws/y9qof8xX5r/NE+M/zU/f/83N3b/OzRy/0E4dP9NQXf/Vkl5/3Jmhv9eVXn/O1SB/yVZ
        jv8oYpj/KWme/z1tmP90hZ//Kl2P/x1Ogv9NXon/rK7X/7nK8v+yyPH/v3Lg/9N85v/JleD/TIG2/zJ5
        rf8wc6j/LWyi/y5vpf8vcqf/Mnis/zN5rv8ydqv/MnOp/y9poP8tXZX/LVCL/y5AgP8qNHP/LjNu/yc3
        cv8pXJT/JV6T/ytqn/8oaZ7/THOa/26FpP8lW4//I1CD/3d+pP++t+j/ubHr/7Cl5v+/Z+D/y27i/9GI
        3/9Udq7/JmCW/ydbk/8pYJb/MnWr/zaAtP82grb/NYC0/zR7sP82frP/L3Kn/ypnnP8wc6j/Nnuw/zFx
        p/8saJ7/Kmec/ylmm/8oYpf/L3Cl/ytrof9dfZ7/Xn6i/yFYjv85Xoz/pKXJ/8C77/+xpej/qZvk/9Vj
        3//Tbd//znfX/1Vxr/8pap//MXKo/zR7sP83grb/N4S3/zaDtv81gbX/N4G2/ziEuP82fbL/KmSa/yVV
        jP8vaqH/NXqv/zN5rv8wdKj/Kmec/yplmv8ucKT/LW2i/2eEo/9LdJ7/JluO/3aIqv/GxOn/vLnv/6ik
        6f+gmuX/1G3a/9Zy2f/Vddb/iXnF/z1/tf83hLf/NoO3/zaCtv82grb/NoK2/zaBtv83grf/NoO3/zaC
        t/8xdqv/JFSK/x5De/8nWpD/MHCl/zN5rv8wcab/L3Cl/yxto/80bqD/b4em/zhsmv9Qdp7/vsLa/9HQ
        9P+9te3/p6Po/5WX5f/ZfNr/2n3d/9Z30f/Kccz/iX3D/0CBt/81grb/NoO3/zaCtv82grb/NoO3/zaD
        t/82g7b/NoK2/zaBtv8rap7/H0qA/xw/dv8hSH//JlmP/y5uo/8ucKX/K2uh/zxwn/9rhaX/Q3Sh/6Sy
        zv/V0fL/x8jy/8e57v+wpun/kZfm/9d52P/Vc9n/z2vR/8tlyf/Bbcn/inzG/0KAt/81grb/NoK2/zaD
        t/83g7f/N4S4/zaDt/82grb/NoK2/zR+sv8raZ3/IU+E/x1BeP8eQ3j/JlyR/y5vpP8paqD/SHSg/2iF
        qv+Vpsn/19fx/83M8/+yyfH/s8vy/52q6v+GluX/zW/G/8ttwv/NcMX/zGzH/8pnyP/HbMv/lHXF/0h+
        uf81gLT/NoG1/zaCtv82grb/NoK2/zaBtf82gbX/NoG1/zWAtP8tbqP/I1aL/xtGe/8dSX3/JFuP/ylp
        nf9Ze6P/pavQ/9PN8f/Sz/P/usvy/6DP8/+Zx/H/gqDo/3qQ5f/Nd8X/zXe8/9CDvf/Nlsr/xo7Q/8aA
        0//Gc9D/oHHH/1x7uv84gLT/NYC0/zWBtf82gbb/NoG1/zWBtf82gbX/NoK2/zWAtP8yd6z/Kmic/yVe
        kv8pY5f/SH2s/5Kmzf+8wur/v8Px/73F8f+oy/P/k8/1/4nC7/96m+f/cozl/8F8tP/Kh7j/xY6z/7+X
        sP+hf57/k2eY/7p/uP/Gd8v/tmvI/4N8w/9Sgrv/PH+1/zWBtf81gbT/NoC0/zaAtP82f7P/Nn+z/zV+
        s/82fbL/QYC0/2GOvf+IptL/oLTk/6C26v+ar+v/m7Dr/5fB8P+HyfP/fb7r/3Sd5v9ujOb/loO6/7eS
        uf/Kprz/tpi7/394sf9zebz/sIu2/8+azv/Bg9n/w3fU/7iK2f+ji8//e4bG/1B7uv9De7n/QX67/0KC
        vP9DgL3/TYfG/1+R0v91nd7/hp/d/4KZ3/+Hn+X/jabn/4mm5/+GoOf/jbTt/4bH8f96ven/b6Pm/2uT
        5/98hrr/hoq3/7mWrP+xjq3/fqDW/3i26v+2s83/4LTS/9Kj3v/JkN7/yofe/9KP4P/MjOL/lX/X/3aT
        3/9rkuD/a6Lk/2mc4/9wp+n/d7Ht/3Sn5/98l9z/dIji/3KM5f91mOT/f6Lk/4Kc5P+EnN3/h7no/368
        6P9woOX/bZLn/5CEk/+inpr/i32H/2tLfP9aW6n/cH+y/6eWnP+yhZL/uHyj/8yNxv/Ggcz/yoDU/86E
        3/+djeL/frDs/3mz7f95w/P/d8Ly/3nG9P98yvb/c6/o/3aU1f9wgt//cYTj/22S4/96ouT/dInO/15X
        ov9wf7z/cZfP/2Jvwf9oa8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>